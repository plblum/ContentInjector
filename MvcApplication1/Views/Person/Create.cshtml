@using InsertionsManagement
@model MvcApplication1.Models.Person

@{
    ViewBag.Title = "Create";
// this is a shorthand for the commented out code. It uses extension methods which requires you declare @using InsertionsManager like above.    
    this.InsertionsManager().AddScriptFile("~/Scripts/jquery.validate.min.js", 10);
    this.InsertionsManager().AddScriptFile("~/Scripts/jquery.validate.unobtrusive.min.js", 11);
/*  same as above
    var insertionsManager = this.InsertionsManager();
    insertionsManager.Access<IScriptFileInserter>().Add("~/Scripts/jquery.validate.min.js", 10);
    insertionsManager.Access<IScriptFileInserter>().Add("~/Scripts/jquery.validate.unobtrusive.min.js", 11);
 */ 
}

<h2>Create</h2>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Person</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.FirstName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FirstName)
            @Html.ValidationMessageFor(model => model.FirstName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.LastName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LastName)
            @Html.ValidationMessageFor(model => model.LastName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.BirthDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.BirthDate)
            @Html.ValidationMessageFor(model => model.BirthDate)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
